{
  "hash": "ba7d822180ac91101afea9c5f3f5f992",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Day 36\"\ntitle-slide-attributes:\n  data-background-image: images/lake.jpg\n  data-background-size: contain\n  data-background-opacity: \"0.5\"\nsubtitle: \"Math 216: Statistical Thinking\"\nauthor: \"Bastola\"\nformat:\n  revealjs:\n    html-math-method: mathjax\n    mathjax-url: \"https://cdnjs.cloudflare.com/ajax/libs/mathjax/3.2.2/MathJax.js\" \n    theme: [default, scss/main.scss]\n    slide-number: true\n    preview-links: auto\n    history: true\n    chalkboard: \n      src: drawings.json\n    transition: slide\n    background-transition: fade    \n    touch: false\n    controls: true\n---\n\n\n\n\n\n\n## Review of Simple Linear Regression Model Estimation {.font80}\n\n::: cle6\n- **Recap**: From the last session, we learned to estimate the simple linear regression line $\\hat{y} = \\hat{\\beta}_0 + \\hat{\\beta}_1 x$ from a sample.\n- **Further Analysis Needs**: To conduct deeper analysis, we adhere to key assumptions about the regression model.\n:::\n\n## Conducting a Simple Linear Regression {.font70}\n\n::: cle4\n- **Step 1:** Hypothesize the deterministic component of the model that relates the mean $E(y)$ to the independent variable $x$ (Section 11.2).\n- **Step 2:** Use the sample data to estimate unknown parameters in the model (Section 11.2).\n- **Step 3:** Specify the probability distribution of the random-error term and estimate the standard deviation of this distribution (Section 11.3).\n- **Step 4:** Statistically evaluate the usefulness of the model (Sections 11.4 and 11.5).\n- **Step 5:** When satisfied that the model is useful, use it for prediction, estimation, and other purposes (Section 11.6).\n:::\n\n## {.font60}\n\n> Example 1: Consider an experiment designed to estimate the linear relationship between the percentage of a certain drug in the bloodstream of a subject and the length of time it takes the subject to react to a stimulus. In particular, the researchers want to predict reaction time $y$ based on the amount of drug in the bloodstream $x$. Data were collected for five subjects, and the results are shown in Table 11.1. (The number of measurements and the measurements themselves are unrealistically simple in order to avoid arithmetic confusion in this introductory example.)\n\n<img src=\"images/Day36-1.png\" style=\"display: block; margin: auto;\" width=\"80%\"  loading=\"lazy\" decoding=\"async\">\n\n\n\n## Step 1: Hypothesize the Deterministic Component {.font80}\n\n::: cle5\n- **Focus:** Straight-line models\n- **Relationship:** Mean response time to drug percentage\n\n\nAssume the model relating mean response time $E(y)$ to drug percentage $x$:\n\n$$\nH: E(y) = \\beta_0 + \\beta x \\longleftarrow \\begin{aligned} & \\text{The true unknown relationship} \\\\ & \\text{between } x \\text{ and } Y \\text{ is a straight line} \\end{aligned}\n$$\n\n:::\n\n\n## Step 2: Use sample data to estimate unknown parameters in the model. {.font80}\n\nThis step is the subject of this section - namely, how can we best use the information in the sample of five observations in Table 11.1 to estimate the unknown $y$-intercept $\\beta_0$ and slope $\\beta_1$ ?\n\n\n::: row\n::: left\n<img src=\"images/Day36-12.png\" style=\"display: block; margin: auto;\" width=\"80%\"  loading=\"lazy\" decoding=\"async\">\n\n\n:::\n\n::: right\n<img src=\"images/Day36-2.png\" style=\"display: block; margin: auto;\" width=\"80%\"  loading=\"lazy\" decoding=\"async\">\n\n:::\n:::\n\n\n##\n\n<img src=\"images/Day36-3.png\" style=\"display: block; margin: auto;\" width=\"80%\"  loading=\"lazy\" decoding=\"async\">\n\n\n\n##\n\n\n<img src=\"images/Day36-4.png\" style=\"display: block; margin: auto;\" width=\"80%\"  loading=\"lazy\" decoding=\"async\">\n\n\n## {.font80}\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the data\nx <- c(1, 2, 3, 4, 5)\ny <- c(1, 1, 2, 2, 4)\n\n# Create a dataframe\ndata <- data.frame(x, y)\n\n# Fit a linear model\nmod <- lm(y ~ x, data = data)\nsummary(mod)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = y ~ x, data = data)\n\nResiduals:\n         1          2          3          4          5 \n 4.000e-01 -3.000e-01 -3.886e-16 -7.000e-01  6.000e-01 \n\nCoefficients:\n            Estimate Std. Error t value Pr(>|t|)  \n(Intercept)  -0.1000     0.6351  -0.157   0.8849  \nx             0.7000     0.1915   3.656   0.0354 *\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.6055 on 3 degrees of freedom\nMultiple R-squared:  0.8167,\tAdjusted R-squared:  0.7556 \nF-statistic: 13.36 on 1 and 3 DF,  p-value: 0.03535\n```\n\n\n:::\n:::\n\n\n\n\n\n##\n\n::: panel-tabset\n\n### Plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](Day36_files/figure-revealjs/unnamed-chunk-2-1.png){width=960}\n:::\n:::\n\n\n\n\n### Code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(data, aes(x = x, y = y)) +\n  geom_point() +  # Add points\n  geom_smooth(method = \"lm\", se = FALSE) +  \n  ggtitle(\"Linear Model Fit\") +\n  theme_minimal()\n```\n:::\n\n\n\n:::\n\n## {.font60}\n\n> Back to Example 1, we will use these results to answer the following questions:\n\na. Use the method of least squares to estimate the values of $\\beta_0$ and $\\beta_1$.\n\n::: custom-space\n:::\n\nb. Predict the reaction time when $x=2$.\n\n\n## {.font60}\n\nc. Find the SSE for the analysis.\n\n::: custom-space\n:::\n\nd. Give practical interpretations of $\\widehat{\\beta}_0$ and $\\widehat{\\beta}_1$.\n\n\n##\n\n\n## {.font60}\n\n\n\n\n\n```{=html}\n<iframe width=\"1280\" height=\"1300\" src=\"https://shinylive.io/r/app/#h=0&code=NobwRAdghgtgpmAXGKAHVA6ASmANGAYwHsIAXOMpMAGwEsAjAJykYE8AKAZwAtaJWAlAB0IdJiw4BzSampFSAJmEQRAYgAEAETgAzPnHUBVAJIiArrXUAeALTqd1CwBMAClElx2I9etK1S1HBuEHDUXmAAMvos6lhwkoxwnJy0JOoAgtDUrCmcQmACuN7qKU5w9CwRUKxEZqReED4+peUswaENTU3kAB6k6YlQxhCodeE9TlCkUPm46vkAomRwjOoAGuoAblCOSersxDAwUDaccKgsU3BOAoiz82AAHACcuADsCrjPAMy4jwAsfwAjO8AKzvAAMf0+ADZXo9fo8oQjgX9AW8YflCsUur1+oNhqN6vlWJNpvdFstVgBNLY7Mx7A5EI4nM4XZjkG53PAPBRQoEw3B83BAx4it4iwVA8FAiXSyUimVyqVy-5YoqNLrqKAEPwkABCdVIJHCkiIFLAAHEKCsruoXHJSOqcU0CNw4AQANb0Ig9QljfI8IgAdzipTMOzyPPyAGVuCHYklaE4I9Qo3MAGLpCIxhbYzVdN0e72+-3EsBB4MxswstgWuMJgCyRDK1HU1drrHuWZzeZ8GgAwu6vT6er4iCV48H1DAW6ESjXjnWC+p811jnx2mEXT5ZPIAPJ1InhPdOgoarW+KD0QKH0jH-KJThmaikTgAFWvgWdK58mxWFR+DA75wH0d4PhWi4SDG0xvj+l7-owgG0MBoGkOBAYoE4Tj+KkWQwVMUaFP2GTYbhJA7OotT3nU9hEKsITTpwsG0MxtAEHkv5bABUwoSBYFHphs6th2S5dgUJEYaQdGrMJ87Pp2LrKD4yjKGoWi6PoJQrIh6hyJI7EiGcjC6bY9hmBAup4ewfBEnM1FEgI6ggMUZJQNYdhwP+ZBxDqfj-jZIx1AAJGacwuSuY5mVAnAYBANYrOx7AWXQzFcKQjCcLI-iBUSwUTFMUBzLMWICMpTSsB52qxfF8CMElKWsfUzGZdl9S2SFpKFcVeCleVPi0Do7CBBAkikNw7A9E5ACEAC8ekUGNE2CE5EWXsxRCoOE77uuotX0CsVE6OoY5QBATjqJV2y7JwM5mMx6gHb4u2cLAcAYFiLoAL4um5GA6Mw8DsPu9DGdseqNPNZwAI4APo7CQkiTcRY7zT0cyVfNgjFF95XFHJbZmYMVkBWtTTUDA7CVQAfidcxueo81uewZU43jmoOSFp5VYk50rA68jsGTPiJND7DM6zK5OMdZkSy6ejSWZBMsy68BnbDUV2GrEDizo+X9TOcDq5VStGzr0vBdjK6oIkOG6tcsPa7DJt2Db1zsfUCtzIxDNM4V-2A54qOG+rU0Gy6qBVdIp663MUBJJNGNleoADUO7qB4zKw6gRB8PUTlp1xmcwLDnCzvIE3wONLaMw8FP3Gctc9rmBfp8X2e52Q7Dx5wk21076OXbXbt25yjtm87xHEHIqzzY+1wN7QABeBjzd8rdF3AWd4t3CfBwPGPD7bHsO07rApxCGCgsR1DXvOUM23nQ35I2ZuIPsACkGAKDocxfz-wgeQH3UCPE+Thx7G2IpsAAVvdaS80bAgnUNPeitd55OEXivWu19U5ty3iXHePdhp3zbPNEGYNeIkCgbAh680gRXzmNwGh8D1D0IhBvS8404DwEdnwFCOwVYrhdINfYHVSDBUrGGZMqZOCrXTpHMykcU4Z3waXeI8Au5EODoPHoFALpo0PvNUBup2AK2IqwPRtdBBzGnmgsAttPorh+kI62bNijFE5uIp8L43yfhvAYImeiVh+MCELF0otxaFRZgbaWVU5YrgVlVZWBsCD0D4E4WOl0MDcCmEfd2JizFzCfNIyMtcLaVVdsfAp-hJY+Fxu4jmglxEKTEgRN8PMgmMBcPVLuwt1ARIljEmWdh4ldESUrOcYQDbJE1guSmut8rqC1mbBZYcAB6SgXTJBdnM9gCyKkh3NnrFaGyDYDySSsi2U1VYTx2drfZ0zOA9B2QpVZ6gABU6hylOTsK8q5TlPl-OOU5AA9HtRgIZdZqRXAQKY4QYxyFQHAd+9xiC6FMTU4ACgAC6PUhAiBKlxHw+RhjkEYAQc4pAUU8jRUNMxwAgS4oePilQvUiUPAHPRRIt8IbIKILoPQBBaAUGkuwRgtwHg2Poqs+mwK8UErZZeYlYAOxHXbNDCMT51j7BjDGHoU1qVzBmfK1lF4lWxhrGqmMGqWB7FpOwXVrBBCGpKJwVgJrCVKoeKqogx1rWar2Gse1urnkSobk891zKFVmsvC-M2aqeguuAfkFlnrzVgFfmdNVrAk23I9WAYo5V6mag8U04KUAyIQx2G026gS+ZdJ6fUPpAyom1KaLE2WraXRuJUAWQcJAcJVrbJ4mSM5JlzLEqWmi4iCaiQkB0+t3S85hJXBEsREipxzrYAbcZWtJmCK6C0iQGLSBOXUBoBsTEoJsDVVwsdrZ1DBndI0IsI5fTqFYsg4cnoF6amLc49SWALLPQMGgbKsLeVGV4PwdI6BkqWHmhYI1OlDpQxQ+KkQYAvrYqAA\"></iframe>\n```\n\n\n\n\n## {.font50}\n\n\n> You are provided with a dataset of study hours and GPA scores from 15 students. Your task is to input this data into a Shiny app to calculate the correlation, slope, and intercept of the regression line. Analyze these parameters to understand how study hours relate to GPA.\n\n::: row\n::: left\n\n| Study Hours (X) | GPA (Y)     |\n|-----------------|-------------|\n| 1               | 2.1         |\n| 2               | 2.4         |\n| 3               | 2.6         |\n| 4               | 3.0         |\n| 5               | 3.1         |\n| 6               | 3.2         |\n| 7               | 3.3         |\n| 8               | 3.6         |\n| 9               | 3.9         |\n| 10              | 3.7         |\n| 11              | 3.7         |\n| 12              | 3.7         |\n| 13              | 3.9         |\n| 14              | 3.8         |\n| 15              | 3.9         |\n\n\n:::\n\n::: right\n\n1. **Input the Data**: Enter the study hours and GPA into the Shiny app.\n2. **Calculate the Parameters**: Use the app to find the correlation, slope, and intercept.\n3. **Interpret the Results**:\n   - **Correlation**: Discuss what the correlation coefficient tells you about the relationship between study hours and GPA.\n   - **Slope**: Explain what the slope indicates about the effect of an additional hour of study on GPA.\n   - **Intercept**: Consider the meaning of the intercept in the context of GPA prediction when no study hours are recorded.\n\n:::\n:::\n\n\n##\n\n\n\n",
    "supporting": [
      "Day36_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}